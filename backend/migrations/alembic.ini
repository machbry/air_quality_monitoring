[alembic]
datasets = indicators, pollution

[DEFAULT]
# path to migration scripts
# Use forward slashes (/) also on windows to provide an os agnostic path
script_location = ./datasets/

# template used to generate migration file names
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
prepend_sys_path = .

# max length of characters to apply to the "slug" field
truncate_slug_length = 60

# default dialect for dataset
dialect_name = bigquery

[indicators]
version_locations = ./datasets/indicators
dataset_name = indicators
dataset_location = europe-west1

[pollution]
version_locations = ./datasets/pollution
dataset_name = pollution
dataset_location = europe-west1

[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# lint with attempts to fix using "ruff" - use the exec runner, execute a binary
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
